========================================================================
Original methods section: 

Fastq files were generated by running makefastq. Fastq files were then processed to fragment files using 10x Genomics cellranger count (cellranger-atac-cs version 1.2.0, reference = refdata-cellranger-atac-mm10-1.2.0), which were processed through the ArchR pipeline. Arrow files were created with function createArrowFiles (minTSS=4, minFrags=1000). Two different double scores were computed with function addDoubletScores (LSI based: k=10, knnMethod=”LSI”, LSIMethod=1); UMAP based: k=10, LSImet=1, UMAPparam: n_neighbors=40, min_dist=0.4, metric=”euclidiean”). In addition, we used AMULET (from its v1.0-beta version, running function ATACDoubletDetector.py and adding as problematic region a union of the ENCODE excluded list, segmental duplications, simple repeats, repeat masker, and microsatellites from mm10 obtained from UCSC). Nuclei were then filtered for: TSS enrichment >8 and >1995 fragment counts. Following dimensional reduction (addIterativeLSI: useMatrix = "TileMatrix", name = "IterativeLSI", iterations = 2, varFeatures = 100000, dimsToUse = 1:30), and clustering (AddClusters: reducedDims = "IterativeLSI", method = "Seurat", name = "Clusters", resolution = 0.5), doublets were stringently removed by inspecting distribution of fragment counts, doublet scores (ArchR derived), and AMULET doublet scores per clusters. All nuclei from clusters with anomalously high doublet scores across metrics were removed. In addition, individual nuclei with either >17782 fragment counts, LSI doublet score > 0, UMAP doublet score > 0, or AMULET score > 0.3 (thresholds assessed from the distribution of anomalous doublet clusters) were filtered out as likely doublets. In the end, 31% of nuclei were removed with these filters, leaving 46408 nuclei passing quality filters (20329 nuclei from replicate 1, 26079 nuclei from replicate 2).

The resulting filtered nuclei were dimensionally reduced and clustered (same parameters as above), leading to 9 clusters with >200 nuclei. Clusters with highly correlated accessibility (determined from pseudobulk averaging over cells in cluster) over all peaks (R2 on log-transformed accessibility >0.55) and proximal in the low-dimensional projection were merged. The intermediate endoderm cluster (connecting the visceral and parietal clusters) was kept separate to avoid diluting the signal from the two otherwise well-delineated extraembryonic endoderm clusters. The final 7 clusters are depicted in Ext. Data Fig. 4e (see later section for integration/annotation). scATAC pseudobulk pileup traces (e.g., Fig. 3a, 4b) were generated by first the normalised data using ArchR’s function groupRegionSumArrows. A subset of all cell-type pseudboulks was shown due to space limitations in figures.



========================================================================
List of scripts with brief description: 

Example of original cellRanger function call: 
/net/shendure/vol10/projects/Samuel/nobackup/10X/2020_ATAC/cellranger-atac-1.2.0/cellranger-atac-cs/1.2.0/bin/count --id=EBD21_crispri_1a --reference=/net/shendure/vol10/projects/Samuel/nobackup/10X/2020_ATAC/refdata-cellranger-atac-mm10-1.2.0 --fastqs=/net/shendure/vol10/projects/Samuel/nobackup/10X/2020_ATAC/EBD21_crispri/fastq/outs/fastq_path/H3JK7BGXG/EBD21_crispri_1a,/net/shendure/vol10/projects/Samuel/nobackup/10X/2020_ATAC/EBD21_crispri/fastq_2/outs/fastq_path/H3HFJBGXG/EBD21_crispri_1a --sample=EBD21_crispri_1a --localcores=36 --localmem=128

Initial processing of the fragment files with ArchR: 
SR_EB_scATAC_ArchR_doublet_scan_analysis_20210216.R


Generating the per-cell doublet scores for the LSI method: 
SR_EB_scATAC_ArchR_doublet_scan_analysis_20210210.R  
using function addDoubletScores.
Example doublet score file: doublet_enrichment_scATAC_fragments_1a_knn_LSI_kval_10_LSImet_1_20210210.txt


Same as above, but with the UMAP embedding for score calculation: 
SR_EB_scATAC_ArchR_doublet_scan_analysis_20210216.R
Example doublet score file: doublet_enrichment_scATAC_fragments_1a_knn_UMAP_kval_10_LSImet_1_UMAPneighbours_40_UMAPmindist_0.4_20210216.txt

Doublet score calculation with ATAC-DoubletDetector (now Amulet):
arr_DoubletDetector_20210207.sh
analysis_output_ATAC-DoubletDetector_20210312.R
Example doublet score file: DoubletProbabilities_DoubletDetector_lane1a.txt


Final doublet removal using multiple criteria for high stringency: 
mEB_scATAC_analysis_v2_doublet_analysis_20210316.R


Example of script to generate pile up tracks: 
plot_ATAC_pile_w_gene_tracks_20221017.R
